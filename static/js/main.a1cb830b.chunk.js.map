{"version":3,"sources":["components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","navTabs","refContainer","useRef","refTabsBox","useState","containerScroll","setContainerScroll","activeButtonId","setActiveButtonId","scrollWidth","setScrollWidth","handleScrollWidth","containerWidth","current","offsetWidth","tabsBoxWidth","useEffect","container","onWheel","event","preventDefault","scrollTo","left","scrollLeft","deltaY","behavior","onScroll","addEventListener","window","removeEventListener","className","ref","map","name","id","type","disabled","onClick","target","buttonLeft","offsetLeft","buttonWidth","offsetParent","handleActiveButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1cb830b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nexport const Navigation = ({ navTabs }) => {\n  const refContainer = useRef();\n  const refTabsBox = useRef();\n  const [ containerScroll, setContainerScroll ] = useState(null);\n  const [ activeButtonId, setActiveButtonId ] = useState(null);\n  const [ scrollWidth, setScrollWidth ] = useState(null);\n\n  const handleScrollWidth = () => {\n    const containerWidth = refContainer.current.offsetWidth;\n    const tabsBoxWidth = refTabsBox.current.offsetWidth;\n    const scrollWidth = tabsBoxWidth - containerWidth - 1;\n\n    setScrollWidth(scrollWidth);\n  };\n\n  useEffect(() => {\n    const container = refContainer.current;\n\n    if (container) {\n      const onWheel = event => {\n        event.preventDefault();\n\n        container.scrollTo({\n          left: container.scrollLeft + event.deltaY * 2,\n          behavior: \"smooth\",\n        });\n      }\n\n      const onScroll = event => {\n        event.preventDefault();\n\n        setContainerScroll(container.scrollLeft);\n      }\n\n      container.addEventListener('wheel', onWheel);\n      container.addEventListener('scroll', onScroll);\n      window.addEventListener(\"resize\", handleScrollWidth);\n      handleScrollWidth();\n\n      return () => {\n        container.removeEventListener('wheel', onWheel);\n        container.removeEventListener('scroll', onScroll);\n        window.removeEventListener(\"resize\", handleScrollWidth);\n      };\n    }\n  }, []);\n\n  const handleActiveButton = (event, id) => {\n    event.preventDefault();\n\n    const { target } = event;\n    const container = refContainer.current;\n    const containerScroll = container.scrollLeft;\n    const { offsetLeft: buttonLeft, offsetWidth: buttonWidth, offsetParent } = target;\n    const containerWidth = offsetParent.offsetWidth;\n\n    if (buttonLeft + buttonWidth > containerWidth &&\n      buttonLeft + buttonWidth - containerWidth > containerScroll) {\n      container.scrollTo({\n        left: buttonLeft + buttonWidth - containerWidth,\n        behavior: \"smooth\",\n      });\n    }\n\n    if (buttonLeft < containerScroll) {\n      container.scrollTo({\n        left: buttonLeft,\n        behavior: \"smooth\",\n      });\n    }\n\n    setActiveButtonId(id);\n  }\n\n  return (\n    <>\n      {containerScroll > 0 && <div className=\"shadowLeft\"></div>}\n      <div\n        className=\"container\"\n        ref={refContainer}\n      >\n        <nav>\n          <ul\n            className=\"tabsBox\"\n            ref={refTabsBox}\n          >\n            {navTabs.map(({name, id}) => (\n              <li\n                key={id}\n                className=\"tab\"\n              >\n                {activeButtonId === id\n                ?\n                <button\n                  type=\"button\"\n                  className=\"buttonActive\"\n                  disabled={id === 4}\n                >\n                  {name}\n                </button>\n                : \n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  disabled={id === 4}\n                  onClick={(event) => handleActiveButton(event, id)}\n                >\n                  {name}\n                </button>}\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n      {containerScroll < scrollWidth && <div className=\"shadowRight\"></div>}\n    </>\n  )\n}\n","import React from 'react';\nimport { Navigation } from './components/Navigation/Navigation';\nimport './App.css';\n\nconst navTabs = [\n  {name: 'Job Focus', id: 1},\n  {name: 'Soft Skills', id: 2},\n  {name: 'Technical Skills', id: 3},\n  {name: 'Functional Expertise', id: 4},\n  {name: 'Domain Expertise', id: 5},\n  {name: 'Patent Expertice', id: 6},\n  {name: 'Personal Expertise', id: 7},\n  {name: 'Hard Expertise', id: 8},\n  {name: 'Domain Expertise', id: 9},\n  {name: 'Domain Expertise', id: 10},\n  {name: 'Domain Expertise', id: 11},\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navigation navTabs={navTabs} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}